name: Local Smoke Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    env:
      BACKEND_PORT: 8000
      # FRONTEND_PORT is no longer needed

    steps:
      # 1) Checkout source
      - name: ‚¨áÔ∏è  Checkout repository
        uses: actions/checkout@v4

      # 2) Backend REST (FastAPI)
      - name: üêç  Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: üõ†Ô∏è  Install core REST dependencies
        working-directory: app
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          # install FastAPI stack + CPU‚Äëonly PyTorch
          pip install fastapi uvicorn pydantic requests \
                      torch==2.3.0 

      - name: ‚ñ∂Ô∏è  Start FastAPI REST server
        working-directory: app
        run: |
          source .venv/bin/activate
          uvicorn api:app --host 0.0.0.0 --port $BACKEND_PORT &
          echo "Waiting for REST API‚Ä¶"
          for i in {1..20}; do
            curl -s http://localhost:$BACKEND_PORT/avatars && break
            sleep 1
          done

      # 3) Backend MCP (stdio)
      - name: ü§ñ  Test MCP stdio server
        working-directory: app
        run: |
          source .venv/bin/activate
          # Fire a minimal render_avatar request and parse JSON
          echo '{"tool":"render_avatar","params":{"avatar_path":"../tests/assets/alice.png","audio_path":"../tests/assets/hello.wav"}}' \
            | python mcp_server.py | jq .

      # 4) Smoke tests (Backend only)
      - name: üîç  GET /avatars
        run: curl -sf http://localhost:$BACKEND_PORT/avatars

      # 5) Optional static checks
      - name: üß™  make check
        if: hashFiles('Makefile') != ''
        run: make check || echo "‚ÑπÔ∏è No check target‚Äîskipping."

      # 6) Clean‚Äëup
      - name: üßπ  Kill background servers
        if: always()
        run: |
          pkill -f "uvicorn"      || true
          pkill -f "mcp_server.py" || true
